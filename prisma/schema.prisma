generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  profile Profile []
  @@map("users")
}




model Profile {
  id       Int    @id @default(autoincrement())
  name    String
  occupation String
  schooling String
  userId Int
  user User @relation(fields: [userId], references: [id])

  likeGiven Like[] @relation("whoLiked")
  likeReceived Like[] @relation("whoReceived")

  firstMatch Match[] @relation("firstProfile")
  secondMatch Match[] @relation("secondProfile")

  photos Photos []

  @@map("profiles")
}

model Like{
  id       Int    @id @default(autoincrement())
  whoLikedId Int
  whoReceivedId Int

  whoLiked Profile @relation(name:"whoLiked", fields: [whoLikedId], references: [id])
  whoReceived Profile @relation(name:"whoReceived", fields: [whoReceivedId], references: [id])

   @@map("likes")
}



model Match{
  id       Int    @id @default(autoincrement())
  firstProfileId Int
  secondProfileId Int

  firstProfile Profile @relation(name:"firstProfile", fields: [firstProfileId], references: [id])
  secondProfile Profile @relation(name:"secondProfile", fields: [secondProfileId], references: [id])

   @@map("matches")
}


model Photos{
  id       Int    @id @default(autoincrement())
  photoUrl String
  profileId Int
  profile Profile @relation(fields: [profileId], references: [id])
}